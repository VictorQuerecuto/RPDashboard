{"remainingRequest":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/victor/Desktop/RPDashboard/client/src/components/OrderList.vue?vue&type=style&index=0&id=de0231e8&scoped=true&lang=css&","dependencies":[{"path":"/Users/victor/Desktop/RPDashboard/client/src/components/OrderList.vue","mtime":1590005631110},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDMgewogIG1hcmdpbjogNDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0K"},{"version":3,"sources":["OrderList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OrderList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container>\n    <v-col>\n      <v-row>\n        <v-tooltip top>\n          <template v-slot:activator=\"{ on }\">\n            <div v-on=\"on\">\n              <v-select\n                :items=\"orderStatus\"\n                v-model=\"currentFilter\"\n                item-text=\"name\"\n                label=\"Filter Order Status\"\n                item-value=\"orderStatusId\"\n                v-on:change=\"retrieveOrders(currentFilter)\"\n                dense\n                solo\n              ></v-select>\n            </div>\n          </template>\n          <span>Filter Status</span>\n        </v-tooltip>\n        <v-spacer></v-spacer>\n        <modal v-if=\"isVisibility\" @toggle-modal=\"toggleModal\"></modal>\n        <v-btn @click.prevent=\"toggleModal\">\n          Create Order\n        </v-btn>\n      </v-row>\n      <br />\n      <v-data-table\n        :headers=\"headers\"\n        :items=\"orders\"\n        item-key=\"orderId\"\n        :items-per-page=\"5\"\n        show-expand\n      >\n        <template v-slot:item.createdDate=\"{ item }\">\n          <span>{{ convertDateTime(item.createdDate) }}</span>\n        </template>\n        <template v-slot:top>\n          <v-toolbar flat>\n            <v-toolbar-title>Orders</v-toolbar-title>\n            <v-spacer></v-spacer>\n          </v-toolbar>\n        </template>\n        <template v-slot:expanded-item=\"{ headers, item }\">\n          <td>\n            <strong>Order Status:</strong>\n            {{ convertOrderStatusId(item.orderStatusId) }}\n          </td>\n          <td>\n            <strong>Shipping Address:</strong>\n            {{\n              item.shippingAddressId\n                ? convertShippingAddressId(item.shippingAddressId)\n                : \"No shipping address specified\"\n            }}\n          </td>\n          <td>\n            <strong>Shipped On:</strong>\n            {{\n              item.shippedDate\n                ? convertDateTime(item.shippedDate)\n                : \"Order has not shipped\"\n            }}\n          </td>\n          <td>\n            <v-btn\n              text\n              small\n              color=\"primary\"\n              v-if=\"item.shippingAddressId\"\n              v-on:click=\"\n                toggleMap(convertShippingAddressId(item.shippingAddressId))\n              \"\n            >\n              Locate\n            </v-btn>\n          </td>\n        </template>\n      </v-data-table>\n      <locationMap\n        :lat=\"lat\"\n        :lng=\"lng\"\n        v-if=\"isMapVisible\"\n        @toggle-map=\"toggleMap\"\n      ></locationMap>\n    </v-col>\n  </v-container>\n</template>\n\n<script>\nimport OrderDataService from \"../services/OrderDataService\";\nimport { mapMixin } from \"../mapMixin\";\nimport locationMap from \"../components/locationMap\";\nimport modal from \"../components/modal\";\n\nexport default {\n  components: {\n    modal,\n    locationMap,\n  },\n  mixins: [mapMixin],\n  name: \"orders-list\",\n  data() {\n    return {\n      isVisibility: false,\n      isMapVisible: false,\n      expanded: [],\n      singleExpand: false,\n      orders: [],\n      currentOrder: null,\n      currentIndex: -1,\n      description: \"\",\n      currentFilter: 1,\n      lat: 0,\n      lng: 0,\n      orderStatus: [\n        { orderStatusId: 1, name: \"Ordered\" },\n        { orderStatusId: 2, name: \"Processing\" },\n        { orderStatusId: 3, name: \"Shipped\" },\n        { orderStatusId: 4, name: \"Recieved\" },\n      ],\n      headers: [\n        {\n          text: \"Order Number\",\n          align: \"start\",\n          sortable: false,\n          value: \"orderId\",\n        },\n        { text: \"Description\", value: \"orderDescription\" },\n        { text: \"Created On\", value: \"createdDate\", valueType: \"date\" },\n        { text: \"\", value: \"data-table-expand\" },\n      ],\n    };\n  },\n  methods: {\n    convertDateTime(dateTime) {\n      return dateTime.split(\"T\")[0];\n    },\n    convertShippingAddressId(id) {\n      var address;\n      switch (id) {\n        case 1:\n          address = \"1400 International Pkwy S, Lake Mary, FL, 32746\";\n          break;\n        case 2:\n          address = \"2700 Westhall Ln, Maitland, FL, 32751\";\n          break;\n      }\n      return address;\n    },\n    convertOrderStatusId(id) {\n      var orderStatus;\n      switch (id) {\n        case 1:\n          orderStatus = \"Ordered\";\n          break;\n        case 2:\n          orderStatus = \"Processing\";\n          break;\n        case 3:\n          orderStatus = \"Shipped\";\n          break;\n        case 4:\n          orderStatus = \"Recieved\";\n          break;\n      }\n      return orderStatus;\n    },\n    toggleModal() {\n      this.isVisibility = !this.isVisibility;\n    },\n    async toggleMap(address) {\n      try {\n        const response = await this.getLatLng(address);\n        const loc = response.data.results[0].geometry.location;\n        this.lat = loc.lat;\n        this.lng = loc.lng;\n        this.isMapVisible = true;\n      } catch (ex) {\n        console.log(ex);\n      }\n    },\n    retrieveOrders(filter) {\n      this.currentFilter = filter;\n\n      OrderDataService.findByOrderStatusId(this.currentFilter)\n        .then((response) => {\n          this.orders = response.data;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n      this.isMapVisible = false;\n    },\n    refreshList() {\n      this.retrieveOrders();\n      this.currentOrder = null;\n      this.currentIndex = -1;\n    },\n    setActiveOrder(order, index) {\n      this.currentOrder = order;\n      this.currentIndex = index;\n    },\n  },\n  mounted() {\n    this.retrieveOrders(this.currentFilter);\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}