{"remainingRequest":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/victor/Desktop/RPDashboard/client/src/components/modal.vue?vue&type=style&index=0&id=0eaeaf66&lang=postcss&scoped=true&","dependencies":[{"path":"/Users/victor/Desktop/RPDashboard/client/src/components/modal.vue","mtime":1590003955818},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/victor/Desktop/RPDashboard/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5vdmVybGF5IHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIHJpZ2h0OiAwOwogIGJvdHRvbTogMDsKICBsZWZ0OiAwOwogIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4zKTsKICB6LWluZGV4OiAxMDA7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwp9Cg=="},{"version":3,"sources":["modal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"modal.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"overlay\">\n    <v-flex xs8>\n      <v-card>\n        <v-alert v-if=\"submitted\" type=\"success\">\n          Successfully Submitted Order\n        </v-alert>\n        <v-row>\n          <v-card-title>\n            <span>New Order</span>\n          </v-card-title>\n        </v-row>\n        <form>\n          <v-text-field\n            v-model=\"form.description\"\n            :rules=\"[rules.required]\"\n            label=\"Description\"\n            required\n          >\n          </v-text-field>\n          <v-select\n            :items=\"addresses\"\n            v-model=\"form.selectedAddress\"\n            item-text=\"address\"\n            label=\"Shipping Address\"\n            item-value=\"shippingAddressId\"\n            auto\n            required\n          ></v-select>\n        </form>\n        <div class=\"text-center my-2\">\n          <v-btn v-on:click=\"submitForm\" text color=\"primary\">Submit </v-btn>\n          <v-btn v-on:click=\"close\" text>\n            Cancel\n          </v-btn>\n        </div>\n      </v-card>\n    </v-flex>\n  </div>\n</template>\n\n<script>\nimport OrderDataService from \"../services/OrderDataService\";\n\nexport default {\n  name: \"shippingAddress-list\",\n  data() {\n    return {\n      addresses: [\n        {\n          shippingAddressId: 1,\n          address: \"1400 International Pkwy S, Lake Mary, FL, 32746\",\n        },\n        {\n          shippingAddressId: 2,\n          address: \"2700 Westhall Ln, Maitland, FL, 32751\",\n        },\n      ],\n      form: {\n        description: \"\",\n        selectedAddress: { shippingAddressId: 0, address: \"\" },\n      },\n      rules: {\n        required: (value) => !!value || \"Required.\",\n      },\n      submitted: false,\n    };\n  },\n  methods: {\n    submitForm() {\n      var data = {\n        orderStatusId: 1, //Order Status defaulted to 'Ordered'\n        shippedDate: null,\n        orderDescription: this.form.description,\n        shippingAddressId: this.form.selectedAddress,\n      };\n\n      console.log(data);\n\n      OrderDataService.create(data)\n        .then((response) => {\n          console.log(response.data);\n          this.submitted = true;\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    },\n    close() {\n      this.$emit(\"toggle-modal\");\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"postcss\" scoped>\n.overlay {\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  z-index: 100;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n"]}]}